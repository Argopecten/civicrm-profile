<?php

/**
 * @file
 * Install, update and uninstall functions for the civicrm installation profile.
 */

 /**
  * Implements hook_install().
  *
  * Performs actions to set up the site for this profile.
  * Based on minimal.install
  *
  * @see system_install()
  */
 function civicrmprofile_install() {
   // set default theme other then bartik
   $enable = array(
     'theme_default' => 'bootstrap',
     'admin_theme' => 'seven',
   );
   theme_enable($enable);

   foreach ($enable as $var => $theme) {
     if (!is_numeric($var)) {
       variable_set($var, $theme);
     }
   }

   // Disable the default Bartik theme
   theme_disable(array('bartik'));

   // Enable standard content block only.
   $default_theme = variable_get('theme_default', 'bootstrap');
   $values = array(
     array(
       'module' => 'system',
       'delta' => 'main',
       'theme' => $default_theme,
       'status' => 1,
       'weight' => 0,
       'region' => 'content',
       'pages' => '',
       'cache' => -1,
     ),
   );
   $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
   foreach ($values as $record) {
     $query->values($record);
   }
   $query->execute();

  // Role for site administrators
  $siteadmin_role = new stdClass();
  $siteadmin_role->name = 'site admin';
  $siteadmin_role->weight = 5;
  user_role_save($siteadmin_role);

  // Set this as the administrator role.
  variable_set('user_admin_role', $siteadmin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array(
    'uid' => 1,
    'rid' => $siteadmin_role->rid,
  ))
    ->execute();

  // Role for CRM users
  $crmuser_role = new stdClass();
  $crmuser_role->name = 'crm user';
  $crmuser_role->weight = 2;
  user_role_save($crmuser_role);

  // Role for super users
  $superuser_role = new stdClass();
  $superuser_role->name = 'super user';
  $superuser_role->weight = 3;
  user_role_save($superuser_role);

  // Role for CRM admins
  $crmadmin_role = new stdClass();
  $crmadmin_role->name = 'crm admin';
  $crmadmin_role->weight = 4;
  user_role_save($crmadmin_role);

  // TFA settings
  // https://git.drupalcode.org/project/tfa/blob/7.x-2.x/tfa.admin.inc

  // - TFA is enabled
  variable_set('tfa_enabled', TRUE);

  // Default validation plugin is TOTP
  variable_set('tfa_validate_plugin', 'tfa_basic_totp');

  // Fallback plugins are recovery codes and help page
  variable_set('tfa_fallback_plugins',
    array(
      '-999' => 'tfa_basic_totp',
      '0'    => 'tfa_basic_recovery_code',
      '10'   => 'tfa_basic_help',
    )
  );

  // trusted browser plugin
  variable_set('tfa_login_plugins',
    array(
      'tfa_basic_trusted_browser',
    )
  );

  // roles required to have set up TFA
  //   - 1 is for authenticated users
  //   - 2 is for site admins
  variable_set('tfa_basic_roles_require',
    array(
      '3' => '3',
      '4' => '4',
      '5' => '5',
      '6' => '6',
    )
  );

}
